const Session = require('../models/sessionModel');
const path = require('path');

const sessionController = {};

sessionController.isLoggedIn = async (req, res, next) =>{
    try{
    await Session.findOne({cookieId: req.cookies.cookieID})
    .then(response => response.json())
    .then(data =>{
        //if logged in
        if (data){
            return next();
        }
        //not logged in so redirect to sign up page. 
        //res.redirect('')
    })
}
    //if there is error, redirect to sign up page
    catch (err) {
        // If there is an error, redirect to the sign-up page.
        // res.redirect(...)
      }
    };

    sessionController.startSession = async (req,res,next) => {
        res.cookie('cookieId', res.locals.ssid);
        try{
        await Session.create({cookieID: res.locals.ssid})
        }
        catch (err) {
            return next({
              log: 'An error occured in sessionController in the startSession middleware function',
              status: 400,
              message: { err: 'Creating a new Session was not successful' },
            });
          }
    }

    sessionController.deleteSession = async (req,res,next) =>{
        try{
            await Session.remove({cookieId: req.locals.ssid})
        }
        catch (err) {
            // If there is an error, redirect to the sign-up page.
            // res.redirect(...)
          }
    }

